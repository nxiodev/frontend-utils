{
  "version": 3,
  "sources": ["../../../../../../node_modules/ngx-highlightjs/fesm2022/ngx-highlightjs.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { InjectionToken, makeEnvironmentProviders, inject, PLATFORM_ID, Injectable, signal, computed, ElementRef, afterRenderEffect, SecurityContext, Directive, input, booleanAttribute, output, NgModule } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { BehaviorSubject, firstValueFrom, filter, switchMap, tap, EMPTY, catchError, throwError, forkJoin, map, from } from 'rxjs';\nconst HIGHLIGHT_OPTIONS = new InjectionToken('HIGHLIGHT_OPTIONS');\nfunction provideHighlightOptions(options) {\n  return makeEnvironmentProviders([{\n    provide: HIGHLIGHT_OPTIONS,\n    useValue: options\n  }]);\n}\nvar LoaderErrors;\n(function (LoaderErrors) {\n  LoaderErrors[\"FULL_WITH_CORE_LIBRARY_IMPORTS\"] = \"The full library and the core library were imported, only one of them should be imported!\";\n  LoaderErrors[\"FULL_WITH_LANGUAGE_IMPORTS\"] = \"The highlighting languages were imported they are not needed!\";\n  LoaderErrors[\"CORE_WITHOUT_LANGUAGE_IMPORTS\"] = \"The highlighting languages were not imported!\";\n  LoaderErrors[\"LANGUAGE_WITHOUT_CORE_IMPORTS\"] = \"The core library was not imported!\";\n  LoaderErrors[\"NO_FULL_AND_NO_CORE_IMPORTS\"] = \"Highlight.js library was not imported!\";\n})(LoaderErrors || (LoaderErrors = {}));\nclass HighlightLoader {\n  constructor() {\n    this.document = inject(DOCUMENT);\n    this.isPlatformBrowser = isPlatformBrowser(inject(PLATFORM_ID));\n    this.options = inject(HIGHLIGHT_OPTIONS, {\n      optional: true\n    });\n    // Stream that emits when hljs library is loaded and ready to use\n    this._ready = new BehaviorSubject(null);\n    this.ready = firstValueFrom(this._ready.asObservable().pipe(filter(hljs => !!hljs)));\n    if (this.isPlatformBrowser) {\n      // Check if hljs is already available\n      if (this.document.defaultView['hljs']) {\n        this._ready.next(this.document.defaultView['hljs']);\n      } else {\n        // Load hljs library\n        this._loadLibrary().pipe(switchMap(hljs => {\n          if (this.options?.lineNumbersLoader) {\n            // Make hljs available on window object (required for the line numbers library)\n            this.document.defaultView['hljs'] = hljs;\n            // Load line numbers library\n            return this.loadLineNumbers().pipe(tap(plugin => {\n              plugin.activateLineNumbers();\n              this._ready.next(hljs);\n            }));\n          } else {\n            this._ready.next(hljs);\n            return EMPTY;\n          }\n        }), catchError(e => {\n          console.error('[HLJS] ', e);\n          this._ready.error(e);\n          return EMPTY;\n        })).subscribe();\n      }\n      // Load highlighting theme\n      if (this.options?.themePath) {\n        this.loadTheme(this.options.themePath);\n      }\n    }\n  }\n  /**\n   * Lazy-Load highlight.js library\n   */\n  _loadLibrary() {\n    if (this.options) {\n      if (this.options.fullLibraryLoader && this.options.coreLibraryLoader) {\n        return throwError(() => LoaderErrors.FULL_WITH_CORE_LIBRARY_IMPORTS);\n      }\n      if (this.options.fullLibraryLoader && this.options.languages) {\n        return throwError(() => LoaderErrors.FULL_WITH_LANGUAGE_IMPORTS);\n      }\n      if (this.options.coreLibraryLoader && !this.options.languages) {\n        return throwError(() => LoaderErrors.CORE_WITHOUT_LANGUAGE_IMPORTS);\n      }\n      if (!this.options.coreLibraryLoader && this.options.languages) {\n        return throwError(() => LoaderErrors.LANGUAGE_WITHOUT_CORE_IMPORTS);\n      }\n      if (this.options.fullLibraryLoader) {\n        return this.loadFullLibrary();\n      }\n      if (this.options.coreLibraryLoader && this.options.languages && Object.keys(this.options.languages).length) {\n        return this.loadCoreLibrary().pipe(switchMap(hljs => this._loadLanguages(hljs)));\n      }\n    }\n    return throwError(() => LoaderErrors.NO_FULL_AND_NO_CORE_IMPORTS);\n  }\n  /**\n   * Lazy-load highlight.js languages\n   */\n  _loadLanguages(hljs) {\n    const languages = Object.entries(this.options.languages).map(([langName, langLoader]) => importModule(langLoader()).pipe(tap(langFunc => hljs.registerLanguage(langName, langFunc))));\n    return forkJoin(languages).pipe(map(() => hljs));\n  }\n  /**\n   * Import highlight.js core library\n   */\n  loadCoreLibrary() {\n    return importModule(this.options.coreLibraryLoader());\n  }\n  /**\n   * Import highlight.js library with all languages\n   */\n  loadFullLibrary() {\n    return importModule(this.options.fullLibraryLoader());\n  }\n  /**\n   * Import line numbers library\n   */\n  loadLineNumbers() {\n    return from(this.options.lineNumbersLoader());\n  }\n  /**\n   * Reload theme styles\n   */\n  setTheme(path) {\n    if (this.isPlatformBrowser) {\n      if (this._themeLinkElement) {\n        this._themeLinkElement.href = path;\n      } else {\n        this.loadTheme(path);\n      }\n    }\n  }\n  /**\n   * Load theme\n   */\n  loadTheme(path) {\n    this._themeLinkElement = this.document.createElement('link');\n    this._themeLinkElement.href = path;\n    this._themeLinkElement.type = 'text/css';\n    this._themeLinkElement.rel = 'stylesheet';\n    this._themeLinkElement.media = 'screen,print';\n    this.document.head.appendChild(this._themeLinkElement);\n  }\n  static {\n    this.ɵfac = function HighlightLoader_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HighlightLoader)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HighlightLoader,\n      factory: HighlightLoader.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HighlightLoader, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n/**\n * Map loader response to module object\n */\nconst importModule = moduleLoader => {\n  return from(moduleLoader).pipe(filter(module => !!module?.default), map(module => module.default));\n};\nclass HighlightJS {\n  constructor() {\n    this.loader = inject(HighlightLoader);\n    this.options = inject(HIGHLIGHT_OPTIONS, {\n      optional: true\n    });\n    this.hljsSignal = signal(null);\n    this.hljs = computed(() => this.hljsSignal());\n    // Load highlight.js library on init\n    this.loader.ready.then(hljs => {\n      this.hljsSignal.set(hljs);\n      if (this.options?.highlightOptions) {\n        // Set global config if present\n        hljs.configure(this.options.highlightOptions);\n      }\n    });\n  }\n  /**\n   * Core highlighting function. Accepts the code to highlight (string) and a list of options (object)\n   */\n  async highlight(code, options) {\n    const hljs = await this.loader.ready;\n    return hljs.highlight(code, options);\n  }\n  /**\n   * Highlighting with language detection.\n   */\n  async highlightAuto(value, languageSubset) {\n    const hljs = await this.loader.ready;\n    return hljs.highlightAuto(value, languageSubset);\n  }\n  /**\n   * Applies highlighting to a DOM node containing code.\n   * This function is the one to use to apply highlighting dynamically after page load or within initialization code of third-party JavaScript frameworks.\n   * The function uses language detection by default but you can specify the language in the class attribute of the DOM node. See the scopes reference for all available language names and scopes.\n   */\n  async highlightElement(element) {\n    const hljs = await this.loader.ready;\n    hljs.highlightElement(element);\n  }\n  /**\n   * Applies highlighting to all elements on a page matching the configured cssSelector. The default cssSelector value is 'pre code',\n   * which highlights all code blocks. This can be called before or after the page’s onload event has fired.\n   */\n  async highlightAll() {\n    const hljs = await this.loader.ready;\n    hljs.highlightAll();\n  }\n  /**\n   * @deprecated in version 12\n   * Configures global options:\n   */\n  async configure(config) {\n    const hljs = await this.loader.ready;\n    hljs.configure(config);\n  }\n  /**\n   * Adds new language to the library under the specified name. Used mostly internally.\n   * The function is passed the hljs object to be able to use common regular expressions defined within it.\n   */\n  async registerLanguage(languageName, languageDefinition) {\n    const hljs = await this.loader.ready;\n    hljs.registerLanguage(languageName, languageDefinition);\n  }\n  /**\n   * Removes a language and its aliases from the library. Used mostly internally\n   */\n  async unregisterLanguage(languageName) {\n    const hljs = await this.loader.ready;\n    hljs.unregisterLanguage(languageName);\n  }\n  /**\n   * Adds new language alias or aliases to the library for the specified language name defined under languageName key.\n   */\n  async registerAliases(alias, {\n    languageName\n  }) {\n    const hljs = await this.loader.ready;\n    hljs.registerAliases(alias, {\n      languageName\n    });\n  }\n  /**\n   * @return The languages names list.\n   */\n  async listLanguages() {\n    const hljs = await this.loader.ready;\n    return hljs.listLanguages();\n  }\n  /**\n   * Looks up a language by name or alias.\n   */\n  async getLanguage(name) {\n    const hljs = await this.loader.ready;\n    return hljs.getLanguage(name);\n  }\n  /**\n   * Enables safe mode. This is the default mode, providing the most reliable experience for production usage.\n   */\n  async safeMode() {\n    const hljs = await this.loader.ready;\n    hljs.safeMode();\n  }\n  /**\n   * Enables debug/development mode.\n   */\n  async debugMode() {\n    const hljs = await this.loader.ready;\n    hljs.debugMode();\n  }\n  /**\n   * Display line numbers\n   */\n  async lineNumbersBlock(el, options) {\n    const hljs = await this.loader.ready;\n    if (hljs.lineNumbersBlock) {\n      hljs.lineNumbersBlock(el, options);\n    }\n  }\n  static {\n    this.ɵfac = function HighlightJS_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HighlightJS)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HighlightJS,\n      factory: HighlightJS.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HighlightJS, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Enable usage of the library together with \"trusted-types\" HTTP Content-Security-Policy (CSP)\n *\n * Can be added to angular.json -> serve -> options -> headers to try it out in DEV mode\n * \"Content-Security-Policy\": \"trusted-types ngx-highlightjs; require-trusted-types-for 'script'\"\n *\n * Read more...\n * Angular Security: https://angular.io/guide/security#enforcing-trusted-types\n * Trusted Types: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/trusted-types\n */\nlet policy;\nfunction getPolicy() {\n  if (!policy) {\n    try {\n      policy = window?.trustedTypes?.createPolicy('ngx-highlightjs', {\n        createHTML: s => s\n      });\n    } catch {\n      // trustedTypes.createPolicy throws if called with a name that is\n      // already registered, even in report-only mode. Until the API changes,\n      // catch the error not to break the applications functionally. In such\n      // cases, the code will fall back to using strings.\n    }\n  }\n  return policy;\n}\nfunction trustedHTMLFromStringBypass(html) {\n  return getPolicy()?.createHTML(html) || html;\n}\nclass HighlightBase {\n  constructor() {\n    this._hljs = inject(HighlightJS);\n    this._nativeElement = inject(ElementRef).nativeElement;\n    this._sanitizer = inject(DomSanitizer);\n    afterRenderEffect({\n      write: () => {\n        const code = this.code();\n        // Set code text before highlighting\n        this.setTextContent(code || '');\n        if (code) {\n          this.highlightElement(code);\n        }\n      }\n    });\n    afterRenderEffect({\n      write: () => {\n        const res = this.highlightResult();\n        this.setInnerHTML(res?.value);\n        // Forward highlight response to the highlighted output\n        this.highlighted.emit(res);\n      }\n    });\n  }\n  setTextContent(content) {\n    requestAnimationFrame(() => this._nativeElement.textContent = content);\n  }\n  setInnerHTML(content) {\n    requestAnimationFrame(() => this._nativeElement.innerHTML = trustedHTMLFromStringBypass(this._sanitizer.sanitize(SecurityContext.HTML, content) || ''));\n  }\n  static {\n    this.ɵfac = function HighlightBase_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HighlightBase)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: HighlightBase\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HighlightBase, [{\n    type: Directive\n  }], () => [], null);\n})();\nclass Highlight extends HighlightBase {\n  constructor() {\n    super(...arguments);\n    // Code to highlight\n    this.code = input(null, {\n      alias: 'highlight'\n    });\n    // Highlighted result\n    this.highlightResult = signal(null);\n    // The language name highlight only one language.\n    this.language = input.required();\n    // An optional flag, when set to true it forces highlighting to finish even in case of detecting\n    // illegal syntax for the language instead of throwing an exception.\n    this.ignoreIllegals = input(undefined, {\n      transform: booleanAttribute\n    });\n    // Stream that emits when code string is highlighted\n    this.highlighted = output();\n  }\n  async highlightElement(code) {\n    const res = await this._hljs.highlight(code, {\n      language: this.language(),\n      ignoreIllegals: this.ignoreIllegals()\n    });\n    this.highlightResult.set(res);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵHighlight_BaseFactory;\n      return function Highlight_Factory(__ngFactoryType__) {\n        return (ɵHighlight_BaseFactory || (ɵHighlight_BaseFactory = i0.ɵɵgetInheritedFactory(Highlight)))(__ngFactoryType__ || Highlight);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: Highlight,\n      selectors: [[\"\", \"highlight\", \"\"]],\n      hostVars: 2,\n      hostBindings: function Highlight_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"hljs\", true);\n        }\n      },\n      inputs: {\n        code: [1, \"highlight\", \"code\"],\n        language: [1, \"language\"],\n        ignoreIllegals: [1, \"ignoreIllegals\"]\n      },\n      outputs: {\n        highlighted: \"highlighted\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: HighlightBase,\n        useExisting: Highlight\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Highlight, [{\n    type: Directive,\n    args: [{\n      selector: '[highlight]',\n      providers: [{\n        provide: HighlightBase,\n        useExisting: Highlight\n      }],\n      host: {\n        '[class.hljs]': 'true'\n      }\n    }]\n  }], null, null);\n})();\nclass HighlightAuto extends HighlightBase {\n  constructor() {\n    super(...arguments);\n    // Code to highlight\n    this.code = input(null, {\n      alias: 'highlightAuto'\n    });\n    // Highlighted result\n    this.highlightResult = signal(null);\n    // An optional array of language names and aliases restricting detection to only those languages.\n    // The subset can also be set with configure, but the local parameter overrides the option if set.\n    this.languages = input();\n    // Stream that emits when code string is highlighted\n    this.highlighted = output();\n  }\n  async highlightElement(code) {\n    const res = await this._hljs.highlightAuto(code, this.languages());\n    this.highlightResult.set(res);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵHighlightAuto_BaseFactory;\n      return function HighlightAuto_Factory(__ngFactoryType__) {\n        return (ɵHighlightAuto_BaseFactory || (ɵHighlightAuto_BaseFactory = i0.ɵɵgetInheritedFactory(HighlightAuto)))(__ngFactoryType__ || HighlightAuto);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: HighlightAuto,\n      selectors: [[\"\", \"highlightAuto\", \"\"]],\n      hostVars: 2,\n      hostBindings: function HighlightAuto_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"hljs\", true);\n        }\n      },\n      inputs: {\n        code: [1, \"highlightAuto\", \"code\"],\n        languages: [1, \"languages\"]\n      },\n      outputs: {\n        highlighted: \"highlighted\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: HighlightBase,\n        useExisting: HighlightAuto\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HighlightAuto, [{\n    type: Directive,\n    args: [{\n      selector: '[highlightAuto]',\n      providers: [{\n        provide: HighlightBase,\n        useExisting: HighlightAuto\n      }],\n      host: {\n        '[class.hljs]': 'true'\n      }\n    }]\n  }], null, null);\n})();\nclass HighlightModule {\n  static {\n    this.ɵfac = function HighlightModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HighlightModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: HighlightModule,\n      imports: [Highlight, HighlightAuto],\n      exports: [Highlight, HighlightAuto]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HighlightModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Highlight, HighlightAuto],\n      exports: [Highlight, HighlightAuto]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HIGHLIGHT_OPTIONS, Highlight, HighlightAuto, HighlightBase, HighlightJS, HighlightLoader, HighlightModule, provideHighlightOptions };\n"],
  "mappings": "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",
  "names": ["LoaderErrors"]
}
